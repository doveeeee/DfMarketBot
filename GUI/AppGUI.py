# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c:\Users\18233\Documents\GitHub\DeltaForceMarketBot\GUI\AppGUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(449, 218)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_ideal_price = QtWidgets.QLabel(self.centralwidget)
        self.label_ideal_price.setGeometry(QtCore.QRect(20, 20, 71, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_ideal_price.setFont(font)
        self.label_ideal_price.setObjectName("label_ideal_price")
        self.textEdit_ideal_price = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_ideal_price.setGeometry(QtCore.QRect(90, 20, 121, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textEdit_ideal_price.setFont(font)
        self.textEdit_ideal_price.setObjectName("textEdit_ideal_price")
        self.label_use = QtWidgets.QLabel(self.centralwidget)
        self.label_use.setGeometry(QtCore.QRect(20, 170, 221, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_use.setFont(font)
        self.label_use.setObjectName("label_use")
        self.label_unacceptable_price = QtWidgets.QLabel(self.centralwidget)
        self.label_unacceptable_price.setGeometry(QtCore.QRect(20, 70, 71, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_unacceptable_price.setFont(font)
        self.label_unacceptable_price.setObjectName("label_unacceptable_price")
        self.textEdit_unacceptable_price = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_unacceptable_price.setGeometry(QtCore.QRect(90, 70, 121, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textEdit_unacceptable_price.setFont(font)
        self.textEdit_unacceptable_price.setObjectName("textEdit_unacceptable_price")
        self.is_convertiable = QtWidgets.QCheckBox(self.centralwidget)
        self.is_convertiable.setEnabled(True)
        self.is_convertiable.setGeometry(QtCore.QRect(240, 20, 121, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.is_convertiable.setFont(font)
        self.is_convertiable.setChecked(False)
        self.is_convertiable.setObjectName("is_convertiable")
        self.is_key_mode = QtWidgets.QCheckBox(self.centralwidget)
        self.is_key_mode.setGeometry(QtCore.QRect(240, 70, 121, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.is_key_mode.setFont(font)
        self.is_key_mode.setObjectName("is_key_mode")
        self.textEdit_loop_gap = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_loop_gap.setGeometry(QtCore.QRect(90, 120, 121, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.textEdit_loop_gap.setFont(font)
        self.textEdit_loop_gap.setObjectName("textEdit_loop_gap")
        self.label_loop_gap = QtWidgets.QLabel(self.centralwidget)
        self.label_loop_gap.setGeometry(QtCore.QRect(20, 120, 71, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_loop_gap.setFont(font)
        self.label_loop_gap.setObjectName("label_loop_gap")
        self.is_half_coin_mode = QtWidgets.QCheckBox(self.centralwidget)
        self.is_half_coin_mode.setGeometry(QtCore.QRect(240, 120, 191, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.is_half_coin_mode.setFont(font)
        self.is_half_coin_mode.setObjectName("is_half_coin_mode")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # 添加千位分隔监听器
        self.textEdit_ideal_price.textChanged.connect(lambda: self.format_price_input(self.textEdit_ideal_price))
        self.textEdit_unacceptable_price.textChanged.connect(lambda: self.format_price_input(self.textEdit_unacceptable_price))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "DFMarketBot"))
        self.label_ideal_price.setText(_translate("MainWindow", "理想价格"))
        self.label_use.setText(_translate("MainWindow", "按 F8 开始循环   按 F9 停止循环"))
        self.label_unacceptable_price.setText(_translate("MainWindow", "最高价格"))
        self.is_convertiable.setText(_translate("MainWindow", "物品可兑换"))
        self.is_key_mode.setText(_translate("MainWindow", "钥匙卡模式"))
        self.label_loop_gap.setText(_translate("MainWindow", "循环间隔"))
        self.is_half_coin_mode.setText(_translate("MainWindow", "使用哈夫币余额计算价格"))

    # 自动格式化输入为带逗号的千位格式
    def format_price_input(self, textEdit: QtWidgets.QTextEdit):
        cursor = textEdit.textCursor()
        pos = cursor.position()
        old_text = textEdit.toPlainText()
        raw_text = old_text.replace(',', '')
        if not raw_text.isdigit():
            return
        formatted = "{:,}".format(int(raw_text))
        if formatted == old_text:
            return
        old_commas_before_cursor = old_text[:pos].count(',')
        new_commas_before_cursor = formatted[:pos].count(',')
        delta = new_commas_before_cursor - old_commas_before_cursor
        textEdit.blockSignals(True)
        textEdit.setPlainText(formatted)
        textEdit.blockSignals(False)
        new_pos = pos + delta
        new_pos = max(0, min(len(formatted), new_pos))  # 限制范围
        cursor.setPosition(new_pos)
        textEdit.setTextCursor(cursor)

    # 外部调用读取值时使用，自动去除逗号
    def get_plain_number(self, textEdit: QtWidgets.QTextEdit) -> int:
        text = textEdit.toPlainText().replace(",", "")
        return int(text) if text else 0